-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.academic_friend
(
    average double precision,
    contract character varying(255) COLLATE pg_catalog."default",
    observations character varying(255) COLLATE pg_catalog."default",
    resume character varying(255) COLLATE pg_catalog."default",
    score integer NOT NULL,
    status character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    convocation bigint,
    CONSTRAINT academic_friend_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.academic_friend_has_schedule
(
    schedule_id bigint NOT NULL,
    academic_friend_email character varying(255) COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.consultancy
(
    id bigint NOT NULL DEFAULT nextval('consultancy_id_seq'::regclass),
    aspects_to_improve character varying(255) COLLATE pg_catalog."default",
    creation_date timestamp(6) without time zone,
    difficulties_encountered character varying(255) COLLATE pg_catalog."default",
    end_date timestamp(6) without time zone,
    start_date timestamp(6) without time zone,
    academic_friend character varying(255) COLLATE pg_catalog."default",
    course character varying(255) COLLATE pg_catalog."default",
    student character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT consultancy_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.convocation
(
    id bigint NOT NULL DEFAULT nextval('convocation_id_seq'::regclass),
    closing_date timestamp(6) without time zone,
    evaluation_date timestamp(6) without time zone,
    opening_date timestamp(6) without time zone,
    results_release_date timestamp(6) without time zone,
    CONSTRAINT convocation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.course
(
    code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    credits integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    semester integer NOT NULL,
    CONSTRAINT course_pkey PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.report
(
    id bigint NOT NULL DEFAULT nextval('report_id_seq'::regclass),
    date timestamp(6) without time zone,
    file character varying(255) COLLATE pg_catalog."default",
    observations character varying(255) COLLATE pg_catalog."default",
    state character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    upload_date timestamp(6) without time zone,
    academic_friend character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT report_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.schedule
(
    id bigint NOT NULL DEFAULT nextval('schedule_id_seq'::regclass),
    classroom character varying(255) COLLATE pg_catalog."default",
    day smallint,
    hour time(6) without time zone,
    CONSTRAINT schedule_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.student
(
    semester integer NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT student_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.users
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    code character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (email)
);

ALTER TABLE IF EXISTS public.academic_friend
    ADD CONSTRAINT fkcciorfli85nfy36xjflmtpwxb FOREIGN KEY (email)
    REFERENCES public.student (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS academic_friend_pkey
    ON public.academic_friend(email);


ALTER TABLE IF EXISTS public.academic_friend
    ADD CONSTRAINT fkiadlkcjqqlsd7fm2u9j0xqt0q FOREIGN KEY (convocation)
    REFERENCES public.convocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.academic_friend_has_schedule
    ADD CONSTRAINT fk5xbmdubpkn6dqx69byxmab6mc FOREIGN KEY (schedule_id)
    REFERENCES public.schedule (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.academic_friend_has_schedule
    ADD CONSTRAINT fklk4t8b82c8p5d7yjiypjxpw66 FOREIGN KEY (academic_friend_email)
    REFERENCES public.academic_friend (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consultancy
    ADD CONSTRAINT fkcm4bsp350bqj4iuh57934sj9m FOREIGN KEY (academic_friend)
    REFERENCES public.academic_friend (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consultancy
    ADD CONSTRAINT fke3843igf76ytohbk1vedwd54 FOREIGN KEY (course)
    REFERENCES public.course (code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consultancy
    ADD CONSTRAINT fkm2v37rh0tmm34a6fe84rqp0gj FOREIGN KEY (student)
    REFERENCES public.student (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.report
    ADD CONSTRAINT fk2ug9b9l9q5aq4p9erawdniow0 FOREIGN KEY (academic_friend)
    REFERENCES public.academic_friend (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.student
    ADD CONSTRAINT fk2ffnvcn72q5e4hgyvwchaqt39 FOREIGN KEY (email)
    REFERENCES public.users (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS student_pkey
    ON public.student(email);

END;